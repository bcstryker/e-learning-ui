import SectionCard from "./SectionCard.tsx.bak";
import React, {useState} from "react";

interface SidebarProps {
  sidebarOpen: boolean;
  sections: any[];
  selectedSection: string | null;
  setSelectedSection: (sectionId: string) => void;
}

const Sidebar = ({sidebarOpen, sections, selectedSection, setSelectedSection}: SidebarProps) => {
  const [expandedSection, setExpandedSection] = useState<string | null>(null);

  const toggleExpandedSection = (sectionId: string) => {
    setExpandedSection((prev) => (prev === sectionId ? null : sectionId));
  };

  return (
    <aside
      className={`bg-gray-100 border-r border-gray-300 transition-all duration-300 ${
        sidebarOpen ? "w-64" : "w-16"
      } p-2 overflow-hidden`}
    >
      <h2 className="font-semibold text-gray-700 mb-4 whitespace-nowrap overflow-hidden text-ellipsis">
        {sidebarOpen ? "Sections" : "Sec"}
      </h2>
      <ul className="space-y-2">
        {sections.map((section) => (
          <li key={section.sectionId}>
            <SectionCard
              section={section}
              selectedSection={selectedSection}
              setSelectedSection={setSelectedSection}
              sidebarOpen={sidebarOpen}
              isExpanded={expandedSection === section.sectionId}
              toggleExpandedSection={toggleExpandedSection}
            />
          </li>
        ))}
      </ul>
    </aside>
  );
};

export default Sidebar;
